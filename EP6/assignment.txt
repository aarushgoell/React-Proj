. What is Microservice?
Microservice is a software architecture style where an application is divided into small, independent services. Each service focuses on a single business functionality, is loosely coupled, and communicates with others using APIs.

2. What is Monolith architecture?
Monolith architecture is a traditional approach where an entire application is built as a single, unified unit. All functionalities (frontend, backend, database) are tightly coupled and run together.

3. What is the difference between `Monolith and Microservice?
Aspect	Monolith	Microservice
Structure	Single application unit	Multiple small, independent services
Scalability	Harder to scale specific components	Easily scalable by service
Technology Stack	Usually one technology stack	Different services can use different technologies
Deployment	One large deployment	Independent deployments for each service
Maintenance	Harder to maintain as the application grows	Easier to maintain, updates affect only one service
Fault Tolerance	A failure in one part can crash the whole system	Failure is isolated to one service
4. Why do we need a useEffect Hook?
The useEffect hook in React is used to manage side effects in functional components, like fetching data, updating the DOM, or setting up subscriptions. It ensures code runs after the component renders or when specified dependencies change.

Example:

jsx
Copy
Edit
useEffect(() => {
  console.log("This runs after every render!");
}, []); // Empty dependency array means it runs only once on mount.
5. What is Optional Chaining?
Optional chaining (?.) is a feature in JavaScript that allows safe access to deeply nested properties without worrying about runtime errors if a property is undefined or null.

Example:

javascript
Copy
Edit
const user = { profile: { name: "John" } };
console.log(user.profile?.name); // "John"
console.log(user.profile?.age);  // undefined
console.log(user.address?.city); // undefined (doesn't throw an error)
6. What is Shimmer UI?
Shimmer UI is a skeleton-like placeholder used to indicate that content is loading. It gives users a visual cue while data is being fetched. Commonly seen as grey boxes or lines mimicking actual content.

7. What is the difference between JS expression and JS statement?
Aspect	Expression	Statement
Definition	Produces a value	Performs an action
Can be Assigned	Can be assigned to a variable	Cannot be assigned to a variable
Examples	2 + 2, x > 5, "Hello"	if, for, while, return
8. What is Conditional Rendering? Explain with a code example.
Conditional rendering in React allows rendering different UI elements or components based on conditions.

Example:

jsx
Copy
Edit
function App() {
  const isLoggedIn = true;

  return (
    <div>
      {isLoggedIn ? <h1>Welcome back!</h1> : <h1>Please log in.</h1>}
    </div>
  );
}
9. What is CORS?
CORS (Cross-Origin Resource Sharing) is a security feature of browsers that restricts access to resources from a different origin. It ensures that only authorized domains can access APIs.

10. What is async and await?
async and await simplify working with promises in JavaScript.

async makes a function return a promise.
await pauses the execution of the async function until the promise resolves.
Example:

javascript
Copy
Edit
async function fetchData() {
  const response = await fetch("https://api.example.com/data");
  const data = await response.json();
  console.log(data);
}
11. What is the use of const json = await data.json(); in getRestaurants()?
data.json() parses the JSON response from the server into a JavaScript object.

The await ensures that parsing completes before storing the result in json.
Without parsing, the response remains in raw format.
Example:

javascript
Copy
Edit
async function getRestaurants() {
  const response = await fetch("https://api.example.com/restaurants");
  const json = await response.json(); // Converts raw response to JS object
  return json;
}